@model IEnumerable<Proyecto2.Models.Editoriale>

@{
    ViewData["Title"] = "Index";
}

<h1 class="text-center my-4">Gestión de Editoriales</h1>

<style>
    /* Estilo de los botones de exportación */
    .botonCopiar, .botonCsv, .botonExcel, .botonPdf, .botonPrint, .botonColvis {
        background-color: #4CAF50; /* Verde atractivo */
        color: white;
        border: none;
        margin: 0 0.25em;
        padding: 0.5em 1em;
        font-size: 1em;
        border-radius: 5px;
        cursor: pointer;
    }

        /* Hover para botones */
        .botonCopiar:hover, .botonCsv:hover, .botonExcel:hover, .botonPdf:hover, .botonPrint:hover, .botonColvis:hover {
            background-color: #45a049;
        }

    /* Botones de acciones en la tabla */
    .table-action-btn {
        padding: 0.4em 0.6em;
        font-size: 0.8em;
    }

    /* Botón de Crear Nuevo */
    .btn-create {
        background-color: #007bff;
        color: white;
        padding: 0.5em 1.5em;
        border-radius: 5px;
    }

    /* Tabla con márgenes y scroll responsivo */
    .table-container {
        margin: 2em 0;
        overflow-x: auto;
    }

    th {
        text-align: left !important;
    }

</style>

<!-- Botón Crear Nuevo -->
<p>
    <a class="btn btn-create" asp-action="Create">Nueva Editorial</a>
</p>

<div class="table-container">
    <table class="table table-striped table-hover" id="example">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.Nombres)</th>
                <th>@Html.DisplayNameFor(model => model.Telefono)</th>
                <th>Dirección</th>
                <th>@Html.DisplayNameFor(model => model.Email)</th>
                <th>Sitio Web</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Nombres)</td>
                    <td>@Html.DisplayFor(modelItem => item.Telefono)</td>
                    <td>@Html.DisplayFor(modelItem => item.Direccion)</td>
                    <td>@Html.DisplayFor(modelItem => item.Email)</td>
                    <td>@Html.DisplayFor(modelItem => item.Sitioweb)</td>
                    <td>
                        <div class="d-flex justify-content-around">
                            <a class="btn btn-secondary table-action-btn" asp-action="Edit" asp-route-id="@item.Nit" title="Editar">
                                <i class="fi fi-tr-file-edit"></i>
                            </a>
                            <a class="btn btn-info table-action-btn" asp-action="Details" asp-route-id="@item.Nit" title="Detalles">
                                <i class="fi fi-tr-file-circle-info"></i>
                            </a>
                            <!-- Botón Eliminar con SweetAlert -->
                            <form id="deleteForm-@item.Nit" method="post" asp-action="Delete" asp-route-id="@item.Nit" style="display:none;">
                                <button type="submit" id="deleteButton-@item.Nit"></button>
                            </form>
                            <a class="btn btn-danger table-action-btn"
                               href="javascript:void(0);"
                               onclick="confirmDelete(@item.Nit)">
                                <i class="fi fi-tr-trash-xmark"></i>
                            </a>
                            
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script>

    function confirmDelete(id) {
        Swal.fire({
            title: '¿Estás seguro?',
            text: "¡No podrás revertir esta acción!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Sí, eliminar',
            cancelButtonText: 'Cancelar'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: '/Editoriales/DeleteConfirmed/' + id,  // Asegúrate de que la URL sea correcta
                    type: 'POST',
                    data: { id: id },
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Eliminado',
                                text: response.message
                            }).then(() => {
                                location.reload();  // Recarga la página después de la eliminación
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'No se pudo eliminar',
                                text: response.errorMessage
                            });
                        }
                    },
                    error: function (xhr, status, error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Ocurrió un error al intentar eliminar el autor.'
                        });
                    }
                });
            }
        });
        return false; // Evita la acción por defecto
    }


    new DataTable('#example', {
        layout: {
            topStart: {
                buttons: [
                    {
                        extend: 'copy',
                        text: '<i class="fi fi-tr-copy-alt" title="Copiar"></i>',
                        className: 'botonCopiar',
                        exportOptions: {
                            columns: ':not(:last-child)' // Excluye la última columna (acciones) en la exportación
                        }
                    },
                    {
                        extend: 'csv',
                        text: '<i class="fi fi-tr-file-csv" title="Exportar CSV"></i>',
                        className: 'botonCsv',
                        exportOptions: {
                            columns: ':not(:last-child)' // Excluye la última columna (acciones) en la exportación
                        }
                    },
                    {
                        extend: 'excel',
                        text: '<i class="fi fi-tr-file-excel" title="Exportar Excel"></i>',
                        className: 'botonExcel',
                        exportOptions: {
                            columns: ':not(:last-child)' // Excluye la última columna (acciones) en la exportación
                        }
                    },
                    {
                        extend: 'pdf',
                        text: '<i class="fi fi-tr-file-pdf" title="Exportar PDF"></i>',
                        className: 'botonPdf',
                        exportOptions: {
                            columns: ':not(:last-child)' // Excluye la última columna (acciones) en la exportación
                        }
                    },
                    {
                        extend: 'print',
                        text: '<i class="fi fi-tr-print" title="Imprimir"></i>',
                        className: 'botonPrint',
                        exportOptions: {
                            columns: ':not(:last-child)' // Excluye la última columna (acciones) en la exportación
                        }
                    },
                    {
                        extend: 'colvis',
                        text: '<i class="fi fi-tr-filter-list" title="Mostrar/Ocultar Columnas"></i>',
                        className: 'botonColvis'
                    }
                ]
            }
        },
        language: {
            url: '//cdn.datatables.net/plug-ins/2.0.2/i18n/es-ES.json',
        },
        scrollX: true,
        initComplete: function () {
            $(".dt-buttons").removeClass("dt-buttons");
            $(".dt-button").addClass("botones");
        }
    });
</script>
